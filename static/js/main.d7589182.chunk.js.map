{"version":3,"sources":["Pages/Projects/Projects.module.css","Components/GridComponent/GridComponent.module.css","Pages/About/About.module.css","Components/CardComponent/CardComponent.module.css","Pages/Contact/Contact.module.css","Pages/Home/Home.module.css","Components/Navigation/SideDrawer/SideDrawer.js","hoc/header/header.js","assets/helperFunctions.js","Components/CardComponent/CardComponent.js","Components/GridComponent/GridComponent.js","Components/Layout/CustomModal/CustomModal.js","Pages/About/About.js","Pages/Contact/Contact.js","Pages/Home/Home.js","Pages/Projects/Projects.js","Components/Layout/Layout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","list","width","fullList","SideDrawer","props","classes","React","useState","open","state","setState","toggleDrawer","event","onClick","IconButton","edge","className","menuButton","color","aria-label","Drawer","anchor","onClose","role","onKeyDown","List","ListItem","button","key","component","Link","to","ListItemIcon","ListItemText","primary","theme","root","flexGrow","marginRight","spacing","title","Header","pageName","useLocation","pathname","replace","AppBar","position","Toolbar","click","Typography","variant","openLink","link","window","location","href","CardComponent","Card","CardContent","description","CardActions","Button","size","linkTitle","GridComponent","container","cards","map","el","Grid","item","xs","rand","Math","round","random","getModalStyle","top","left","transform","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","CustomModal","modalStyle","body","style","id","text","Modal","display","aria-labelledby","aria-describedby","summary","Summary","workExperienceSummary","About","displayModal","setShowModal","showModal","AboutList","ContactCard","Contact","Home","webProjectsSummary","WebProjectList","reactNavtiveProjectSummary","reactNativeProjectList","androidProjects","AndroidProjectList","Projects","Divider","Layout","basename","path","exact","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d7589182.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Summary\":\"Projects_Summary__2q0Ct\",\"Divider\":\"Projects_Divider__3yjAO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"GridComponent_root__1oWpn\",\"bullet\":\"GridComponent_bullet__1umaW\",\"summary\":\"GridComponent_summary__XWeAC\",\"container\":\"GridComponent_container__336u0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Summary\":\"About_Summary__JLLf3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CardComponent_root__2uXO_\",\"container\":\"CardComponent_container__2Rhd9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Summary\":\"Contact_Summary__A6aic\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Summary\":\"Home_Summary__35Hgy\"};","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport navigationItems from '../navigationItems/navigationItems';\r\n\r\nconst useStyles = makeStyles({\r\n    list: {\r\n        width: 250,\r\n    },\r\n    fullList: {\r\n        width: 'auto',\r\n    },\r\n});\r\n\r\nconst SideDrawer = (props) => {\r\n    const classes = useStyles();\r\n    const [state, setState] = React.useState({\r\n\r\n        open: false\r\n    });\r\n\r\n    const toggleDrawer = open => event => {\r\n\r\n        setState({ ...state, open: !state.open });\r\n    };\r\n\r\n\r\n    const list = () => (\r\n\r\n        <div\r\n            role=\"presentation\"\r\n            onClick={toggleDrawer(false)}\r\n            onKeyDown={toggleDrawer(false)}\r\n        >\r\n            <List>\r\n                    <ListItem button key='Home'  component={Link} to=\"Home\">\r\n                        <ListItemIcon><HomeIcon /></ListItemIcon>\r\n                        <ListItemText primary='Home'\r\n                             />\r\n                    </ListItem>\r\n                \r\n                    <ListItem button key='About' component={Link} to=\"About\">\r\n                        <ListItemIcon><InfoIcon /></ListItemIcon>\r\n                        <ListItemText primary='About'\r\n                        />\r\n                    </ListItem>\r\n                \r\n                    <ListItem button key='Projects'  component={Link} to=\"Projects\">\r\n                        <ListItemIcon><WorkIcon /></ListItemIcon>\r\n                        <ListItemText primary='Projects'\r\n                        />\r\n                    </ListItem>\r\n            \r\n                    <ListItem button key='Contact'  component={Link} to=\"Contact\">\r\n                        <ListItemIcon><EmailIcon /></ListItemIcon>\r\n                        <ListItemText primary='Contact'\r\n                        />\r\n                    </ListItem>\r\n            </List>\r\n        </div >\r\n    );\r\n    return (\r\n        <div onClick={toggleDrawer(true)}>\r\n            <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" >\r\n                <MenuIcon />\r\n            </IconButton>\r\n            <Drawer anchor={'left'} open={state.open} onClose={toggleDrawer(false)}>\r\n                {list('left')}\r\n            </Drawer>\r\n        </div>\r\n    );\r\n}\r\nexport default SideDrawer;","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SideDrawer from '../../Components/Navigation/SideDrawer/SideDrawer'\r\nimport {useLocation} from 'react-router-dom'\r\n\r\n// update for react hooks \r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function Header(props) {\r\n  const classes = useStyles();\r\n  const [drawerOpen, setDrawerOpen] = useState(false);\r\n  let location = useLocation();\r\n  function handleClick(e) {\r\n    e.preventDefault();\r\n  \r\n  }\r\n  const toggleDrawer = event => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n    setDrawerOpen(true);\r\n\r\n    console.log('Drawer was open.');\r\n  };\r\n\r\n  const pageName = (location.pathname).replace('/','') +\"  -   Ian Shinbrot\";\r\n\r\n  \r\n  return (\r\n    \r\n    <div className={classes.root}>\r\n      \r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <SideDrawer click={props.click}/>\r\n         \r\n          <Typography variant=\"h6\" className={classes.title}>\r\n           {pageName.replace('website','About')}\r\n          </Typography>\r\n          \r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","\r\nexport function openLink (link)  {\r\n    window.location.href=link\r\n}\r\n","import React from 'react';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Card } from '@material-ui/core';\r\nimport classes from './CardComponent.module.css'\r\n\r\nconst CardComponent = props => {\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardContent>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                    {props.title}\r\n                </Typography>\r\n                <Typography variant=\"body2\" component=\"p\">\r\n                    {props.description}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <Button size=\"small\" onClick={props.click}>{props.linkTitle}</Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default CardComponent;","import React from 'react'\r\nimport { Grid } from '@material-ui/core';\r\nimport classes from './GridComponent.module.css'\r\nimport CardComponent from '../CardComponent/CardComponent'\r\n\r\nconst GridComponent = props => {\r\n    return (\r\n        <div className={classes.container}>\r\n            {props.cards.map(el => (\r\n                <Grid container spacing={1} className={classes.container}>\r\n                    <Grid container item xs={12} spacing={3}>\r\n                        <CardComponent title={el.title} description={el.description} linkTitle={el.linkTitle} click={el.click} />\r\n                    </Grid>\r\n                </Grid>\r\n            ))\r\n\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GridComponent;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 + rand();\r\n    const left = 50 + rand();\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      position: 'absolute',\r\n      width: 400,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n  }));\r\nconst CustomModal = props => {\r\n    const classes = useStyles();\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n\r\n\r\n    const body = (\r\n        <div style={modalStyle} className={classes.paper}>\r\n            <h2 id=\"simple-modal-title\">{props.title}</h2>\r\n           \r\n               {props.text}\r\n               \r\n               <Button onClick={props.click}>CLOSE</Button>\r\n        </div>\r\n    );\r\n    return (\r\n        <div>\r\n\r\n          <Modal\r\n            open={props.display}\r\n            onClose={props.click}\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n          >\r\n            {body}\r\n          </Modal>\r\n        </div>\r\n      );\r\n}\r\nexport default CustomModal;","import React, { useState } from 'react';\r\n\r\n\r\nimport { openLink } from '../../assets/helperFunctions'\r\nimport classes from './About.module.css'\r\nimport GridComponent from '../../Components/GridComponent/GridComponent'\r\nimport CustomModal from '../../Components/Layout/CustomModal/CustomModal';\r\n\r\n\r\nconst summary = <p className={classes.Summary}>Hello, My name is Ian Shinbrot. I am currently an Software Developer at Equisoft.\r\n<br />\r\nI graduated from Drexel in June 2016 with a bachelors degree in Computer Science. At Drexel, I have completed three different co-ops, 6-month internships.\r\nMy first co-op was at Independence Blue Cross, while my second and third co-op were both at NextDocs, which was acquired by Aurea during my third co-op.\r\nPlease click one of the below links to learn more information.</p>;\r\n\r\nconst workExperienceSummary = <div>\r\n    <h4>Equisoft</h4>\r\n              I currently work at Equisoft as a Software Developer working as a software cons\r\n\r\n<h4>Lockheed Martin</h4>\r\n              I currently work at Lockheed Martin as an Associate Software Engineer working on the LRDR radar system.\r\n              I work in an Agile Scrum Environment utilizing C++ as the primary language, while performing some tasks\r\n              with bash scripting. My project utilizing GIT, Crucible, and Jenkins for our primary functions\r\n   <h4>NextDocs</h4>\r\n              I worked  at NextDocs for two of my co-ops, between March-September 2014-2015.\r\n              NextDocs was acquired by Aurea during my third co-op in June 2015.\r\n              At NextDocs I worked on the NextDocs Suite of Applications consisting of the Regulatory, SOP, and eTMF platforms.\r\n              I was able to quickly learn C#, SQL, and improve my Javascript skills there. as well as my scripting skills.\r\n\r\n              <h4>Independence Blue Cross</h4>\r\n              I worked at Independence Blue Cross for 6 months where I performed manual testing of their mobile IBX application,\r\n              used Adobe Photoshop to design Drug Labels to be used in the application,\r\n              as well as initiate the move toward automated testing using a program called SeeTest.\r\n</div>\r\nconst About = props => {\r\n\r\n    const displayModal = () => {\r\n        setShowModal(!showModal);\r\n    }\r\n\r\n    const [showModal, setShowModal] = useState(false)\r\n    const AboutList = [\r\n        {\r\n            title: 'Work Experience',\r\n            description: ' \\I have worked at many companies throughout the years. Click to see more information.',\r\n            linkTitle: 'More Information',\r\n            click: () => { displayModal() }\r\n        }, {\r\n            title: 'Projects',\r\n            description: 'Click to view my projects',\r\n            linkTitle: 'Projects',\r\n            click: () => { openLink(\"Projects\") }\r\n        }, {\r\n            title: 'Resume',\r\n            description: 'Please Check out my updated Resume',\r\n            linkTitle: 'RESUME',\r\n            click: () => openLink('https://ishinbrot.github.io/ishinbrot/ianShinbrot_resume.pdf')\r\n        }\r\n    ]\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {summary}\r\n            <GridComponent cards={AboutList} />\r\n            <CustomModal display={showModal} click={displayModal} text={workExperienceSummary} title=\"Work Experience\" />\r\n        </div >\r\n    );\r\n}\r\nexport default About;","import React from 'react';\r\nimport classes from './Contact.module.css'\r\nimport GridComponent from '../../Components/GridComponent/GridComponent'\r\nconst summary = <p className={classes.Summary}>\r\nMy email address is ianshinbro@gmail.com\r\nStay tuned for updates to this page</p>;\r\n\r\nconst ContactCard = [\r\n    {\r\n        title: 'Contact Information',\r\n        description: \"Please click the link below to send me an email.\",\r\n        linkTitle: 'Email'\r\n    }\r\n]\r\n\r\nconst Contact = props => {\r\n    return (\r\n        <div>\r\n            {summary}\r\n            <GridComponent cards={ContactCard} />\r\n        </div >\r\n    );\r\n}\r\nexport default Contact;","import React from 'react';\r\nimport classes from './Home.module.css'\r\nconst summary = <p className={classes.Summary}>Hello, My name is Ian Shinbrot. I am currently an Software Developer at Equisoft.\r\n<br/>\r\nWelcome to my site. This site is continuously getting updated. (Last updated March 2020) If you have any feedback feel free to let me know so I can improve the site.\r\nFeel free to click any of the links above or from the navigation drawer to find more information.</p>;\r\n\r\nconst Home = props => {\r\n    return (\r\n        <div>\r\n            {summary}\r\n        </div >\r\n    );\r\n}\r\nexport default Home;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport  {openLink} from '../../assets/helperFunctions'\r\nimport classes from './Projects.module.css'\r\nimport GridComponent from '../../Components/GridComponent/GridComponent'\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst webProjectsSummary = <div className={classes.Summary}>\r\n    <h2>Web Projects</h2><p className={classes.Summary}>Please check out some of my projects below</p>\r\n</div>;\r\n\r\n\r\nconst WebProjectList = [\r\n    {\r\n        title: 'Virtual Pest',\r\n        description: \"The Virtual Pest is very similar to a Tamagotchi. The 'pest' has 5 different states that it can show based on the actions the user chooses.\",\r\n        linkTitle: 'Virtual Pest'\r\n    }, {\r\n        title: 'CollegeSearch',\r\n        description: \"This is my senior project. I worked on the front-end of the application using both HTML and Angular Material 1.0.\"\r\n            + \"It is a college search application that allows you to search for colleges. It currently doesn't run on github pages.\"\r\n            + \"This links to the github location of the repository.\",\r\n        linkTitle: 'CollegeSearch',\r\n       click: ()=>openLink('https://github.com/DrexelSeniorDesign2016Team8/FrontEnd')\r\n    }\r\n]\r\n\r\nconst reactNavtiveProjectSummary = <div className={classes.Summary}>\r\n    <h2>ReactNative Applications</h2>\r\n    <p className={classes.Summary}>These are reactNative apps meant to be compatible with the iOS and Android OS. Only the Android APK will be able to be downloaded\r\n</p></div>;\r\nconst reactNativeProjectList = [\r\n    {\r\n        title: 'GuessANumber',\r\n        description: \"This application is a basic game that is two players. On the initial screen you are prompted to enter a number. On the second screen you can guess if the number is greater or lower\",\r\n        linkTitle: 'Download'\r\n    }, \r\n]\r\n\r\nconst androidProjects = <div className={classes.Summary}>\r\n    <h2>Android Applications</h2>\r\n    <p className={classes.Summary}>These Android Applications must be downloaded and installed on an Android phone to run. Make sure you check 'Unknown Sources' in the Security Settings so the applications can be installed.\r\n</p></div>;\r\n\r\nconst AndroidProjectList = [\r\n    {\r\n        title: 'Septa Train Finder',\r\n        description: \"This application allows a user to find upcoming trains between two Septa stations. Septa is the Philadelphia Subway System. The user will select a starting station and ending station. Hitting TrainInfo will display the upcoming trains between the two stations. Long pressing a train will also inform you of the estimated arrival time, and actual time..\",\r\n        linkTitle: 'CS275_A2',\r\n        click: () =>openLink('Projects/CS275_A2.apk)')\r\n    }, {\r\n        title: 'Parking Lot Database',\r\n        description: \"This program allows a user to add a custom parking lot to a database stored on cloudmine. The application can also display the list of lots added, edit the already existing lots, or find lots within 100 miles of the current location..\",\r\n        linkTitle: 'CS275_LAB3',\r\n        click: () => openLink('Projects/CS275_lab3.apk')\r\n    }, {\r\n        title: 'trackerBat',\r\n        description: 'This program allows a user to track a baseball players progress. The application allows a player to have multiple games, and multiple at bats. As of January 2017 the application supports saving and full database functionality. If you download my application please leave any comments for the app from the contact page.',\r\n        linkTitle: 'TRACKERBAT',\r\n        click: () => openLink('Projects/trackerBat.apk')\r\n    }\r\n]\r\n\r\nconst Projects = props => {\r\n    return (\r\n        <div>\r\n            <div className={classes.Summary}>\r\n            <p>This page is under active development. Please click the following button to be directed to my github page</p>\r\n            <Button className={classes.Summary} variant=\"outlined\" onClick={()=>{return window.location.href=\"https://github.com/ishinbrot\"}}>LINK TO GITHUB</Button>\r\n            </div>\r\n            {webProjectsSummary}\r\n            <GridComponent cards={WebProjectList} />\r\n            <Divider />\r\n\r\n            {reactNavtiveProjectSummary}\r\n            <GridComponent cards={reactNativeProjectList} />\r\n            <Divider />\r\n\r\n\r\n            {androidProjects}\r\n            <GridComponent cards={AndroidProjectList} />\r\n            <Divider />\r\n        </div >\r\n    );\r\n}\r\nexport default Projects;","import React, { useState } from 'react';\r\nimport { BrowserRouter, Route, Switch, HashRouter } from 'react-router-dom';\r\nimport Header from '../../hoc/header/header'\r\nimport About from '../../Pages/About/About';\r\nimport Contact from '../../Pages/Contact/Contact';\r\nimport Home from '../../Pages/Home/Home';\r\nimport Projects from '../../Pages/Projects/Projects';\r\n\r\nconst Layout = (props) => {\r\n\r\n\r\n  return (\r\n    <HashRouter basename='/Home'>\r\n      <BrowserRouter className=\"App\">\r\n        <Header />\r\n        <Switch>\r\n          <Route path=\"/Home\" component={Home} exact />\r\n          <Route path=\"/About\" component={About} exact />\r\n          <Route path=\"/Projects\" component={Projects} exact />\r\n          <Route path=\"/Contact\" component={Contact} exact />\r\n          <Route component={Home} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </HashRouter>\r\n  )\r\n}\r\n\r\nexport default Layout;\r\n","import React from 'react';\nimport './App.css';\nimport Layout from './Components/Layout/Layout'\n\nconst App = (props) => {\n  return (\n    <Layout />\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}